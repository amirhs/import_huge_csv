services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    init: true
    healthcheck:
      test: ["CMD", "bash", "/app/docker/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: app
    restart: unless-stopped
    depends_on:
      - database
      - rabbitmq
    networks:
      - app_network
    volumes:
      - app_upload_files:/app/var/uploads
      - .:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PHP_UPLOAD_MAX_FILESIZE: 500M
      PHP_POST_MAX_SIZE: 500M
      PHP_MEMORY_LIMIT: 2G
    ports:
      - "8002:8002"
    command: >
      sh -c "
        echo 'Starting cron daemon...' &&
        /usr/sbin/cron &&
        echo 'Cron started successfully' &&
        php bin/console doctrine:migrations:migrate --no-interaction &&
        php -S 0.0.0.0:8002 -t /app/public"

  database:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:

volumes:
  app_upload_files:
  mysql_data: